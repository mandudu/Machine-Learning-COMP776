{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"1bA78ABNd1E33xguNavQtHF-ZKJ2fNqoU","timestamp":1669912359415},{"file_id":"1AOOI64GTQGf2Qxd2s88PvrQymd6HMm5H","timestamp":1667330206876},{"file_id":"13Zi9AaskIFnUn0BV5-MB_Uph5EaUw2Em","timestamp":1603374724223},{"file_id":"13wPNsi8BAZYubGaV2XisXKYSuGrHJvAH","timestamp":1603283915307},{"file_id":"/v2/external/notebooks/gpu.ipynb","timestamp":1603119648921}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"tMce8muBqXQP"},"source":["# GMMs, 3 Ways\n","\n","In the following we will optimize a Gaussian mixture model (GMM) using three optimization techniques: 1) directly optimizing the likelihood; 2) using the expectation maximization (EM) algorithm; and 3) using an amortized-inference variational lowerbound."]},{"cell_type":"markdown","metadata":{"id":"oM_8ELnJq_wd"},"source":["## Data and Setup *(10 points)*\n","\n","First, it may help to enable GPUs for the notebook:\n","\n","- Navigate to Editâ†’Notebook Settings\n","- select GPU from the Hardware Accelerator drop-down\n","\n","Next, confirm that we can connect to the GPU with tensorflow.\n","\n","*(Note, it is fine if you can not connect to GPU, it just might take a little longer to run.)*"]},{"cell_type":"code","metadata":{"id":"sXnDmXR7RDr2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669914626749,"user_tz":300,"elapsed":4098,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"a8d8ccf2-df86-43fc-da05-b251a5f19588"},"source":["%tensorflow_version 2.x\n","import tensorflow as tf\n","device_name = tf.test.gpu_device_name()\n","if device_name != '/device:GPU:0':\n","  raise SystemError('GPU device not found')\n","print('Found GPU at: {}'.format(device_name))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Colab only includes TensorFlow 2.x; %tensorflow_version has no effect.\n","Found GPU at: /device:GPU:0\n"]}]},{"cell_type":"markdown","metadata":{"id":"fVf6_-ZENH02"},"source":["Let's import additional packages of use."]},{"cell_type":"code","metadata":{"id":"k1jRaUQWZIvL"},"source":["%matplotlib inline\n","import numpy as np\n","import matplotlib.pyplot as plt\n","plt.style.use('seaborn-white')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"T5HQydpArjSj"},"source":["Next, we prescribe the ground truth parameters to generate data.\n","Recall that the parameters are $\\pi_j$, the mixing prior coefficients for components, $\\mu_j$, the means for components, and $\\sigma_j$ the standard deviation for components. $\\pi$ will be represented with logits in `gt_logits`; i.e. the softmax of `gt_logits` is $\\pi$. $\\mu$ is represented by `gt_means`. $\\sigma$ is represented in log space by `gt_lsigmas`; i.e. the exp of `gt_lsigmas` is $\\sigma$.\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"unlUWaX1zBAj"},"source":["gt_logits = tf.math.log([1/4, 1/4, 1/6, 1/6, 1/6])\n","gt_means = tf.convert_to_tensor([1.0, -0.5, -2, .5, 3])\n","gt_lsigmas = tf.math.log([.5, 1.0, .2, 0.1, .5])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WkEPeSpHr7q6"},"source":["**Sample data based on the parameters (10 points).**\n","\n","Fill in the code below to generate samples."]},{"cell_type":"code","metadata":{"id":"0_SgMO9zWGKS"},"source":["def make_data(N, logits, means, lsigmas):\n","  z = tf.transpose(tf.random.categorical([logits], N))\n","  y = tf.random.normal((N, 1))\n","  \"\"\"\n","  MUST USE Z AND Y ABOVE\n","  hint: use tf.gather\n","  x = .... transform y to get sample ( N x 1 )\n","  \"\"\"\n","  x = tf.gather(means, z)+tf.gather(tf.math.exp(lsigmas), z)*y\n","  return x"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"o5XfJFZAuPT0"},"source":["Now plot the data. (Hint: it should look something like this image.)"]},{"cell_type":"code","metadata":{"id":"gTg9R8DAaFiM","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914627204,"user_tz":300,"elapsed":464,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"6404af39-a8ad-41c5-9870-290b1a0814f3"},"source":["NUM_EXAMPLES = 5000\n","training_inputs = make_data(NUM_EXAMPLES, gt_logits, gt_means, gt_lsigmas)\n","plt.hist(np.reshape(training_inputs, [-1]), bins=50, alpha=0.5,\n","         histtype='stepfilled', color='steelblue', edgecolor='none');"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Hdt565duFg1H"},"source":["## Likelihood based GMMs (50 Points)"]},{"cell_type":"markdown","metadata":{"id":"Sf9WNNQ4x0wi"},"source":["Here we shall optimize parameters of an estimated GMM directly with maximum likelihood estimation (MLE)."]},{"cell_type":"markdown","metadata":{"id":"GFMrCxq10JpF"},"source":["**Likelihood function (20 points)**\n","\n","To do so, we need to write a function that computes the log-likelihood for inputs given our estimated parameters. To be numerically stable *you need to use `tf.reduce_logsumexp` (you will lose points if not)*."]},{"cell_type":"code","metadata":{"id":"GSe6njCZe0z0"},"source":["def mixture_likelihood(x, logits, means, lsigmas):\n","    \"\"\"Given log-unnormalized mixture weights, shift, and log scale parameters\n","    for mixture components, return the likelihoods for targets.\n","    Args:\n","        x: N x 1 tensor of 1d targets to get likelihoods for.\n","        logits: ncomp tensor of mixing priors of mixture model.\n","        means: ncomp tensor of means of mixture model.\n","        lsigmas: ncomp tensor of log std. dev. of mixture model.\n","    Return:\n","        likelihoods: N x 1  tensor of likelihoods log p(x).\n","    \"\"\"\n","    # Compute likelihoods per x\n","    # Write log likelihood with logsumexp.\n","    sigmas = tf.expand_dims(tf.exp(lsigmas), 0)\n","    logits = tf.expand_dims(logits, 0)\n","    means = tf.expand_dims(means, 0)\n","    log_norm_consts = -lsigmas - 0.5*np.log(2.0*np.pi)\n","    log_kernel = -0.5*tf.square((x-means)/sigmas)\n","    log_exp_terms = log_kernel + log_norm_consts + logits\n","    log_likelihoods = tf.reduce_logsumexp(log_exp_terms, -1) - \\\n","        tf.reduce_logsumexp(logits, -1)\n","    return log_likelihoods"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1kBOCCf60_00"},"source":["Let's plot our likelihood using the ground truth parameters. The likelihood should match up to the histogram above."]},{"cell_type":"code","metadata":{"id":"ulXu8DWgdm1L"},"source":["def plot_density(logits, means, lsigmas):\n","  gridx = np.reshape(np.linspace(-5.0, 5.0, 1000), [-1, 1])\n","  log_px = mixture_likelihood(gridx, logits, means, lsigmas)\n","  plt.plot(gridx, np.exp(log_px))\n","  plt.scatter(tf.reshape(means, [-1, 1]), np.exp(mixture_likelihood(tf.reshape(means, [-1, 1]), logits, means, lsigmas)))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vn_xiaO21-h_"},"source":["**Side question (4 points):** What is the expected value of `np.mean(np.exp(log_px))` above? *Explain why.*"]},{"cell_type":"markdown","metadata":{"id":"g2YrYMw_eQsL"},"source":["*TODO*\n","\n","The mean approximates $\\int_{[-5, 5]} \\frac{1}{10} p(x) dx =  \\frac{1}{10}\\int_{[-5, 5]}  p(x) dx = 0.1$ since it is like sampling from a uniform."]},{"cell_type":"code","metadata":{"id":"0KcIEcuKd7nW","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914627206,"user_tz":300,"elapsed":16,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"0ecdd782-d8c7-457e-acad-9b139abfd296"},"source":["plot_density(gt_logits, gt_means, gt_lsigmas)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"iGAFyZL329PK"},"source":["### Optimization\n","We will now optimize a model based on its likelihood."]},{"cell_type":"markdown","metadata":{"id":"U_OWFnXN6hpV"},"source":["**Model (14 points)**\n","\n","First, let's implement a keras model for GMMs."]},{"cell_type":"code","metadata":{"id":"SzNPSfBWrJ5N"},"source":["class GMM(tf.keras.Model):\n","  def __init__(self, k):\n","    super(GMM, self).__init__()\n","    \"\"\"\n","    Hint: it helps to initialize variables close to zero with a small range\n","    (about 0.1 standard deviation).\n","\n","    self.logits = tf.Variable( TODO , name='logits')\n","    self.means = tf.Variable( TODO, name='means')\n","    self.lsigmas = tf.Variable( TODO, name='lsigmas')\n","    \"\"\"\n","    self.logits = tf.Variable(tf.random.normal([k], stddev=0.1), name='logits')\n","    self.means = tf.Variable(tf.random.normal([k], stddev=0.1), name='means')\n","    self.lsigmas = tf.Variable(\n","        tf.random.normal([k], stddev=0.1), name='lsigmas')\n","\n","  def call(self, inputs):\n","    \"\"\"\n","    Hint: what should the model return? It should have the same length as\n","    inputs.\n","    \"\"\"\n","    return mixture_likelihood(inputs, self.logits, self.means, self.lsigmas)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cKptaMe_6vYF"},"source":["**Loss (4 points)**\n","\n","Now we'll implement the loss to *minimize* according to gradients."]},{"cell_type":"code","metadata":{"id":"5ytK7gFpsfXc"},"source":["def loss(model, inputs):\n","  \"\"\"\n","  Hint: return some_function_of(model(inputs)).\n","  \"\"\"\n","  return -tf.reduce_mean(model(inputs))  # TODO\n","\n","def grad(model, inputs):\n","  with tf.GradientTape() as tape:\n","    loss_value = loss(model, inputs)\n","  return tape.gradient(loss_value, model.trainable_variables)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CpRwd8VJ7cfK"},"source":["**Train (4 points)**\n","\n","Let's train using our training data. Note, you may want to run this several times to observe differences in the resulting model. (No need for minibatches.)"]},{"cell_type":"code","metadata":{"id":"XoazQOtKuqNd","colab":{"base_uri":"https://localhost:8080/","height":800},"executionInfo":{"status":"ok","timestamp":1669914660884,"user_tz":300,"elapsed":33691,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"98b427d5-ec2a-4dde-9b1c-fc9262c40e78"},"source":["K = 5\n","model = GMM(K)\n","optimizer = tf.keras.optimizers.Adam(learning_rate=0.01)\n","\n","print(\"Initial loss: {:.3f}\".format(loss(model, training_inputs)))\n","plot_density(model.logits, model.means, model.lsigmas)\n","\n","steps = 3000\n","for i in range(steps):\n","  \"\"\"\n","  Hint:\n","  grads = something with training_inputs...\n","  \"\"\"\n","  grads = grad(model, training_inputs)  # TODO\n","  optimizer.apply_gradients(zip(grads, model.trainable_variables))\n","  if i % 100 == 0:\n","    print(\"Loss at step {:03d}: {:.3f}\".format(i, loss(model, training_inputs)))\n","    plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Initial loss: 2.306\n","Loss at step 000: 2.286\n","Loss at step 100: 1.918\n","Loss at step 200: 1.912\n","Loss at step 300: 1.816\n","Loss at step 400: 1.780\n","Loss at step 500: 1.758\n","Loss at step 600: 1.673\n","Loss at step 700: 1.637\n","Loss at step 800: 1.634\n","Loss at step 900: 1.628\n","Loss at step 1000: 1.615\n","Loss at step 1100: 1.614\n","Loss at step 1200: 1.614\n","Loss at step 1300: 1.614\n","Loss at step 1400: 1.614\n","Loss at step 1500: 1.614\n","Loss at step 1600: 1.614\n","Loss at step 1700: 1.614\n","Loss at step 1800: 1.614\n","Loss at step 1900: 1.614\n","Loss at step 2000: 1.614\n","Loss at step 2100: 1.614\n","Loss at step 2200: 1.614\n","Loss at step 2300: 1.614\n","Loss at step 2400: 1.614\n","Loss at step 2500: 1.614\n","Loss at step 2600: 1.614\n","Loss at step 2700: 1.614\n","Loss at step 2800: 1.614\n","Loss at step 2900: 1.614\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"pXSkfvZX8H0E"},"source":["Let's plot our estimate versus the ground truth to see how well they match up."]},{"cell_type":"code","metadata":{"id":"cfz8ebbBvZVC","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914660885,"user_tz":300,"elapsed":10,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"fcb1d2da-9e39-41bb-8789-dcfd93eaf074"},"source":["plot_density(gt_logits, gt_means, gt_lsigmas)\n","plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"5ubxD5dY8h4V"},"source":["**Side question (4 points):** Why does it not make sense to compare the MSE of `model.means` versus `gt_means`?"]},{"cell_type":"markdown","metadata":{"id":"brSsyeE5eBCk"},"source":["*TODO*\n","\n","Because the components can be in arbitrary order."]},{"cell_type":"markdown","metadata":{"id":"xoaetbFhCxjw"},"source":["## EM GMMs (40 Points)\n","\n","Now we will train a GMM using the expectation maximation algorithm.\n"]},{"cell_type":"markdown","metadata":{"id":"kLeSLusmAUl-"},"source":["**Implement posterior (16 points)**\n","\n","Implement the function which will compute the posterior of latent component indicators $z_i$'s given GMM parameters."]},{"cell_type":"code","metadata":{"id":"CHC1mGj6gPKm"},"source":["def mixture_posterior_logits(x, logits, means, lsigmas):\n","  \"\"\"Given log-unnormalized mixture weights, shift, and log scale parameters\n","  for mixture components, return the posterior of latent z_i's.\n","  Args:\n","      x: N x 1 tensor of 1d targets to get posteriors for.\n","      logits: ncomp tensor of mixing priors of mixture model\n","      means: ncomp tensor of means of mixture model.\n","      lsigmas: ncomp tensor of log std. dev. of mixture model.\n","  Return:\n","      posterior_logits: N x ncomp  tensor logits for posterior of z_i's.\n","  \"\"\"\n","  sigmas = tf.expand_dims(tf.exp(lsigmas), 0)\n","  logits = tf.expand_dims(logits, 0)\n","  means = tf.expand_dims(means, 0)\n","  log_norm_consts = -lsigmas - 0.5*np.log(2.0*np.pi)\n","  log_kernel = -0.5*tf.square((x-means)/sigmas)\n","  log_exp_terms = log_kernel + log_norm_consts + logits\n","  return log_exp_terms"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KK4b_fEa9TXj"},"source":["**Implement M step (16 points)**\n","\n","Next, we implement the M step, which will update the parameters of the GMM given a current posterior."]},{"cell_type":"code","metadata":{"id":"TK6s4-s0iMMe"},"source":["def mstep(x, posterior):\n","  \"\"\"Given *normalized* mixture weights, shift, and log scale parameters\n","  for mixture components, return the updated parameters of the GMM.\n","  Args:\n","      x: N x 1 tensor of 1d samples.\n","      posterior: N x ncomp  tensor of *normalized* posterior for z_i's;\n","        i.e. sums to 1 along the second axis.\n","  Return:\n","      logits: ncomp tensor of new mixing priors logits of mixture model\n","      means: ncomp tensor of new means of mixture model.\n","      lsigmas: ncomp tensor of new log std. dev. of mixture model.\n","  \"\"\"\n","  sum_posterior = tf.reduce_sum(posterior, axis=0, keepdims=True)\n","  means = tf.matmul(x, posterior, transpose_a=True)/sum_posterior\n","  sigmas2 = tf.reduce_sum(\n","      tf.square(x-means)*posterior, axis=0, keepdims=True) / \\\n","      sum_posterior\n","  lsigmas = tf.math.log(tf.sqrt(sigmas2))\n","  logits = tf.math.log(tf.reduce_mean(posterior, axis=0))\n","  return logits, tf.squeeze(means, axis=0), tf.squeeze(lsigmas, axis=0)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3JUNGVzGA4co"},"source":["**Implement EM Model (8 Points)**\n","\n","Based on the above functions, we now implement a model that updates parameters using the E and M steps when called."]},{"cell_type":"code","metadata":{"id":"lV9RwezjnmSM"},"source":["class EMGMM(tf.keras.Model):\n","  def __init__(self, k):\n","    super(EMGMM, self).__init__()\n","    \"\"\"\n","    Hint: You should be able to initialize as above.\n","    *Note the trainable=False.*\n","    self.logits = tf.Variable( TODO , name='logits', trainable=False)\n","    self.means = tf.Variable( TODO, name='means', trainable=False)\n","    self.lsigmas = tf.Variable( TODO, name='lsigmas', trainable=False)\n","    \"\"\"\n","    self.logits = tf.Variable(tf.random.normal([k], stddev=0.1), name='logits',\n","                              trainable=False)\n","    self.means = tf.Variable(tf.random.normal([k], stddev=0.1), name='means',\n","                             trainable=False)\n","    self.lsigmas = tf.Variable(\n","        tf.random.normal([k], stddev=0.1), name='lsigmas', trainable=False)\n","\n","  def call(self, inputs):\n","    \"\"\"\n","    E step\n","    Hint: think about logits versus probabilities.\n","    posterior = ...\n","    \"\"\"\n","    posterior = tf.nn.softmax(\n","        mixture_posterior_logits(inputs, self.logits, self.means, self.lsigmas),\n","        axis=-1)\n","    \"\"\"\n","    M step\n","    \"\"\"\n","    new_logits, new_means, new_lsigmas = mstep(inputs, posterior)  # TODO\n","\n","    self.logits.assign(new_logits)\n","    self.means.assign(new_means)\n","    self.lsigmas.assign(new_lsigmas)\n","    return None  # Shouldn't return anything"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"LyxNcjkWMSu1"},"source":["### Optimization\n","\n","Train the model as follows."]},{"cell_type":"code","metadata":{"id":"LVRJZrEdpg0F","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914667297,"user_tz":300,"elapsed":6419,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"b741a20c-2ef7-4330-97b4-a6d157f61efe"},"source":["K = 5\n","model = EMGMM(K)\n","\n","steps = 3000\n","for i in range(steps):\n","  model(training_inputs)\n","  if i % 100 == 0:\n","    plot_density( model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"V-2ZDBLdMZX4"},"source":["Compare to ground truth."]},{"cell_type":"code","metadata":{"id":"Lm-cA8qHqki3","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914667298,"user_tz":300,"elapsed":24,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"068c7d09-9f7c-4844-efae-22f8f7aad364"},"source":["plot_density(gt_logits, gt_means, gt_lsigmas)\n","plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"BS4HVvEEgD1m"},"source":["## Variational GMMs (50 Points)\n","\n","Now we will train a GMM using a variational bound. Similarly to VAEs, the approximate posterior (denoted as $q$ in class) will be parameterized as a neural network that yeilds $q(z_i \\mid x_i)$. Unlike VAEs, we will not sample from $q(z_i \\mid x_i)$ to approximate the ELBO; instead, we shall directly compute an expectation w.r.t. $q(z_i \\mid x_i)$.\n"]},{"cell_type":"markdown","metadata":{"id":"zeyXEFsxVBdc"},"source":["**KL Divergence (15 points)**\n","\n","KL plays an important role in variational inference. Implement the function below to compute the KL divergence of multiple pairs of distributions. *Do not use an existing implementation of KL.*"]},{"cell_type":"code","metadata":{"id":"3l_99TC3qkzw"},"source":["def kl_divergence(p_logits, q_logits):\n","  \"\"\" Compute the KL divergence between discrete distributions p and q.\n","  Args:\n","        p_logits: N x m tensor of logits for N distributions over m elements.\n","        q_logits: N x m  tensor of logits for N distributions over m elements.\n","    Return:\n","        kl: N tensor of KL(p_i || q_i)\n","  \"\"\"\n","  \"\"\" Hint: it is numerically stable to use (so please use)\n","    tf.nn.softmax_cross_entropy_with_logits. Be careful about what is in logit\n","    versus probability space.\n","  \"\"\"\n","  p_softmax = tf.nn.softmax(p_logits, axis=-1)\n","  kl = -tf.nn.softmax_cross_entropy_with_logits(p_softmax, p_logits) + \\\n","    tf.nn.softmax_cross_entropy_with_logits(p_softmax, q_logits)\n","  return kl"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"x2dRkuKTWznc"},"source":["**ELBO (15 points)**\n","\n","Next we shall implement the ELBO for a model and given approximate posterior likelihoods."]},{"cell_type":"code","metadata":{"id":"Cu4zc-81NZ5B"},"source":["def elbo(inputs, q_logits, logits, means, lsigmas):\n","  \"\"\" Compute the ELBO for a given GMM model and approximate posterior.\n","  Args:\n","        inputs: N x 1 points to compute ELBO at.\n","        q_logits: N x ncomp tensor of logits for approximate posterior of z_i.\n","        logits: ncomp tensor of mixing priors of mixture model\n","        means: ncomp tensor of means of mixture model.\n","        lsigmas: ncomp tensor of log std. dev. of mixture model.\n","    Return:\n","        lb: N tensor of elbo values\n","  \"\"\"\n","  \"\"\"\n","  Hint: Do not try to use a reparameterization-type trick. Instead, directly\n","  compute any expectations.\n","  \"\"\"\n","  sigmas = tf.expand_dims(tf.exp(lsigmas), 0)\n","  logits = tf.expand_dims(logits, 0)\n","  means = tf.expand_dims(means, 0)\n","  log_norm_consts = -lsigmas - 0.5*np.log(2.0*np.pi)\n","  log_kernel = -0.5*tf.square((inputs-means)/sigmas)\n","  log_exp_terms = log_kernel + log_norm_consts\n","  exp_logp = tf.reduce_sum(\n","      tf.nn.softmax(q_logits, axis=-1)*log_exp_terms, axis=-1)\n","  kl = kl_divergence(q_logits, tf.tile(logits, [inputs.shape[0], 1]))\n","  return exp_logp - kl"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dnWsSLUbiey7"},"source":["**Implement Model (8 points)**\n","\n","Use the above two functions to implement the variational GMM."]},{"cell_type":"code","metadata":{"id":"uoclQYDRKwUm"},"source":["class VGMM(tf.keras.Model):\n","  def __init__(self, k, nhidden_layers=2, hidden_size=256):\n","    super(VGMM, self).__init__()\n","    \"\"\"\n","    Hint: it helps to initialize variables close to zero with a small range\n","    (about 0.1 standard deviation).\n","\n","    self.logits = tf.Variable( TODO , name='logits')\n","    self.means = tf.Variable( TODO, name='means')\n","    self.lsigmas = tf.Variable( TODO, name='lsigmas')\n","    \"\"\"\n","    self.logits = tf.Variable(tf.random.normal([k], stddev=0.1), name='logits')\n","    self.means = tf.Variable(tf.random.normal([k], stddev=0.1), name='means')\n","    self.lsigmas = tf.Variable(\n","        tf.random.normal([k], stddev=0.1), name='lsigmas')\n","\n","    \"\"\"\n","    Setup a neural network with nhidden_layers with hidden_size number of units\n","    to output logits of approximate posteriors below.\n","    Hint: use tf.keras.layers.Dense and a ELU activation where appropriate.\n","    layers = [...]\n","    \"\"\"\n","    layers = [\n","      tf.keras.layers.Dense(\n","          hidden_size, activation=tf.nn.elu) for _ in range(nhidden_layers)] + \\\n","          [tf.keras.layers.Dense(k)]\n","    self.q_net = tf.keras.Sequential(layers)\n","\n","  def call(self, inputs):\n","    \"\"\"\n","    Return the ELBO for the current model\n","    Hint: make a call to self.q_net(inputs).\n","    \"\"\"\n","    return elbo(inputs,\n","                self.q_net(inputs), self.logits, self.means, self.lsigmas)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"a2nadImfaliR"},"source":["**Train Model (2 points)**\n","\n","Now we'll train the GMM using the ELBO bound."]},{"cell_type":"code","metadata":{"id":"Avd82zEfHfec","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1669914748733,"user_tz":300,"elapsed":81450,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"8c18472d-5e45-401f-bb1c-7a7aeff42077"},"source":["K = 5\n","model = VGMM(K, nhidden_layers=2, hidden_size=128)\n","optimizer = tf.keras.optimizers.Adam(learning_rate=0.005)\n","\n","steps = 5000\n","for i in range(steps):\n","  \"\"\"\n","  Hint:\n","  grads = something with training_inputs...\n","  \"\"\"\n","  grads = grad(model, training_inputs)  # TODO\n","  optimizer.apply_gradients(zip(grads, model.trainable_variables))\n","  if i % 100 == 0:\n","    print(\"Loss at step {:03d}: {:.3f}\".format(i, loss(model, training_inputs)))\n","    plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss at step 000: 2.523\n","Loss at step 100: 1.949\n","Loss at step 200: 1.924\n","Loss at step 300: 1.922\n","Loss at step 400: 1.920\n","Loss at step 500: 1.920\n","Loss at step 600: 1.921\n","Loss at step 700: 1.919\n","Loss at step 800: 1.919\n","Loss at step 900: 1.919\n","Loss at step 1000: 1.919\n","Loss at step 1100: 1.920\n","Loss at step 1200: 1.919\n","Loss at step 1300: 1.919\n","Loss at step 1400: 1.919\n","Loss at step 1500: 1.919\n","Loss at step 1600: 1.919\n","Loss at step 1700: 1.919\n","Loss at step 1800: 1.919\n","Loss at step 1900: 1.919\n","Loss at step 2000: 1.918\n","Loss at step 2100: 1.918\n","Loss at step 2200: 1.916\n","Loss at step 2300: 1.904\n","Loss at step 2400: 1.805\n","Loss at step 2500: 1.783\n","Loss at step 2600: 1.717\n","Loss at step 2700: 1.679\n","Loss at step 2800: 1.672\n","Loss at step 2900: 1.671\n","Loss at step 3000: 1.670\n","Loss at step 3100: 1.670\n","Loss at step 3200: 1.670\n","Loss at step 3300: 1.670\n","Loss at step 3400: 1.669\n","Loss at step 3500: 1.667\n","Loss at step 3600: 1.660\n","Loss at step 3700: 1.636\n","Loss at step 3800: 1.615\n","Loss at step 3900: 1.616\n","Loss at step 4000: 1.615\n","Loss at step 4100: 1.615\n","Loss at step 4200: 1.614\n","Loss at step 4300: 1.614\n","Loss at step 4400: 1.614\n","Loss at step 4500: 1.614\n","Loss at step 4600: 1.614\n","Loss at step 4700: 1.614\n","Loss at step 4800: 1.614\n","Loss at step 4900: 1.614\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"IEprNAaTa64W"},"source":["Compare to ground truth."]},{"cell_type":"code","metadata":{"id":"ucnplz-MIGAs","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914748734,"user_tz":300,"elapsed":16,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"37200402-f2ee-4cbc-d83f-0ca52964d705"},"source":["plot_density(gt_logits, gt_means, gt_lsigmas)\n","plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"CuRdz9fXbEvY"},"source":["**Likelihood versus ELBO (4 Points)**\n","\n","Recall that we can compute the exact likelihood for a GMM. Report the average difference between the true log likelihood and the ELBO on the training data."]},{"cell_type":"code","metadata":{"id":"pE9jzY6dBLFu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669914748734,"user_tz":300,"elapsed":14,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"0117bcba-1fbb-4e2c-ee5f-9d8d89dbb262"},"source":["tf.reduce_mean(mixture_likelihood(training_inputs, model.logits, model.means, model.lsigmas) - model(training_inputs))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=float32, numpy=0.00028287212>"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"YLqZCRV5b8vk"},"source":["**Matching Likelihood to ELBO (6 points)**\n","\n","What is the missing piece to match the ELBO to log likelihood? Show the average difference between the true log likelihood and an adjusted ELBO that should match. *Hint the difference may not be exactly 0 due to numerical issues.*"]},{"cell_type":"code","metadata":{"id":"jWQka9EMYnZK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669914748735,"user_tz":300,"elapsed":12,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"0146b5cd-9a95-4660-ed2d-1e7f196938c2"},"source":["tf.reduce_mean(mixture_likelihood(training_inputs, model.logits, model.means, model.lsigmas) - (model(training_inputs) + kl_divergence(model.q_net(training_inputs), mixture_posterior_logits(training_inputs, model.logits, model.means, model.lsigmas))))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=float32, numpy=-6.9081786e-08>"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"I5LxIbJrgyuR"},"source":["# Extra Credit (20 Points)"]},{"cell_type":"markdown","metadata":{"id":"UQUINRQyhEio"},"source":["## ELBO EM (10 Points)\n","In class we discussed that the EM algorithm is optimizing the ELBO in both the E and M steps. Modify the EMGMM model below to plot the ELBO as we train."]},{"cell_type":"code","metadata":{"id":"RrFtRzXfiDRY"},"source":["class ELBOEMGMM(tf.keras.Model):\n","  def __init__(self, k):\n","    super(ELBOEMGMM, self).__init__()\n","    \"\"\"\n","    Hint: You should be able to initialize as above. Note the trainable=False.\n","    self.logits = tf.Variable( TODO , name='logits', trainable=False)\n","    self.means = tf.Variable( TODO, name='means', trainable=False)\n","    self.lsigmas = tf.Variable( TODO, name='lsigmas', trainable=False)\n","    \"\"\"\n","    self.logits = tf.Variable(tf.random.normal([k], stddev=0.1), name='logits',\n","                              trainable=False)\n","    self.means = tf.Variable(tf.random.normal([k], stddev=0.1), name='means',\n","                             trainable=False)\n","    self.lsigmas = tf.Variable(\n","        tf.random.normal([k], stddev=0.1), name='lsigmas', trainable=False)\n","\n","  def call(self, inputs):\n","    \"\"\"\n","    E step\n","    Hint: think about logits versus probabilities.\n","    posterior = ...\n","    elbo_estep = ...\n","    \"\"\"\n","    posterior_logits = mixture_posterior_logits(\n","        inputs, self.logits, self.means, self.lsigmas)\n","    elbo_estep = elbo(\n","        inputs, posterior_logits, self.logits, self.means, self.lsigmas)\n","    \"\"\"\n","    M step\n","    elbo_mstep = ...\n","    \"\"\"\n","    new_logits, new_means, new_lsigmas = mstep(\n","        inputs, tf.nn.softmax(posterior_logits, axis=-1))\n","    self.logits.assign(new_logits)\n","    self.means.assign(new_means)\n","    self.lsigmas.assign(new_lsigmas)\n","    elbo_mstep = elbo(\n","        inputs, posterior_logits, self.logits, self.means, self.lsigmas)\n","    return elbo_estep, elbo_mstep"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lc2F63aJjTf8","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1669914781141,"user_tz":300,"elapsed":32414,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"5186f801-67dc-478d-fb6d-3506e0a233ee"},"source":["K = 5\n","model = ELBOEMGMM(K)\n","\n","steps = 3000\n","elbos = []\n","for i in range(steps):\n","  elbo_e, elbo_m = model(training_inputs)\n","  elbos.append(tf.reduce_mean(elbo_e))\n","  elbos.append(tf.reduce_mean(elbo_m))\n","\n","plt.plot(elbos)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7fd07033bfd0>]"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"lGuXXuQumUIj"},"source":["## Closed-form Variation GMMs (10 points)\n","We can use the M step in the EM algorithm to write out the optimal GMM parameters given a posterior network for optimizing the ELBO. Modify the VGMM model below to write out the optimal GMM parameters as a function of the approximate posteriors. We'll see that this will allow our model to train much faster."]},{"cell_type":"code","metadata":{"id":"DyQS-mSMpBi2"},"source":["class VMGMM(tf.keras.Model):\n","  def __init__(self, k, nhidden_layers=2, hidden_size=256):\n","    super(VMGMM, self).__init__()\n","    \"\"\"\n","    Hint: You should be able to initialize as above. Note the trainable=False.\n","    self.logits = tf.Variable( TODO , name='logits', trainable=False)\n","    self.means = tf.Variable( TODO, name='means', trainable=False)\n","    self.lsigmas = tf.Variable( TODO, name='lsigmas', trainable=False)\n","    \"\"\"\n","    self.logits = tf.Variable(tf.random.normal([k], stddev=0.1), name='logits',\n","                              trainable=False)\n","    self.means = tf.Variable(tf.random.normal([k], stddev=0.1), name='means',\n","                             trainable=False)\n","    self.lsigmas = tf.Variable(\n","        tf.random.normal([k], stddev=0.1), name='lsigmas', trainable=False)\n","\n","    \"\"\"\n","    Setup a neural network with nhidden_layers with hidden_size number of units\n","    to output logits of approximate posteriors below.\n","    Hint: use tf.keras.layers.Dense and a ELU activation where appropriate.\n","    layers = [...]\n","    \"\"\"\n","    layers = [\n","      tf.keras.layers.Dense(\n","          hidden_size, activation=tf.nn.elu) for _ in range(nhidden_layers)] + \\\n","          [tf.keras.layers.Dense(k)]\n","    self.q_net = tf.keras.Sequential(layers)\n","\n","  def call(self, inputs):\n","    \"\"\"\n","    Return the ELBO for the current model\n","    Hint: make a call to self.q_net(inputs).\n","    \"\"\"\n","    posterior_logits = self.q_net(inputs)\n","    new_logits, new_means, new_lsigmas = mstep(\n","        inputs, tf.nn.softmax(posterior_logits, axis=-1))\n","    self.logits.assign(new_logits)\n","    self.means.assign(new_means)\n","    self.lsigmas.assign(new_lsigmas)\n","    return elbo(inputs,\n","                posterior_logits, self.logits, self.means, self.lsigmas)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CRrz1qJprE3G","colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"status":"ok","timestamp":1669914788837,"user_tz":300,"elapsed":7700,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"c2d10bdc-3b65-4ae5-c9b3-c91f83cc4a38"},"source":["K = 5\n","model = VMGMM(K, nhidden_layers=2, hidden_size=128)\n","optimizer = tf.keras.optimizers.Adam(learning_rate=0.0025)\n","\n","steps = 501\n","for i in range(steps):\n","  \"\"\"\n","  Hint:\n","  grads = something with training_inputs...\n","  \"\"\"\n","  grads = grad(model, training_inputs)  # TODO\n","  optimizer.apply_gradients(zip(grads, model.trainable_variables))\n","  if i % 100 == 0:\n","    print(\"Loss at step {:03d}: {:.3f}\".format(i, loss(model, training_inputs)))\n","    plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss at step 000: 1.917\n","Loss at step 100: 1.648\n","Loss at step 200: 1.641\n","Loss at step 300: 1.633\n","Loss at step 400: 1.632\n","Loss at step 500: 1.632\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"nUtehC4mroQk","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1669914788837,"user_tz":300,"elapsed":21,"user":{"displayName":"Junier Oliva","userId":"07256604451093463102"}},"outputId":"6e557f2b-b391-4534-b272-e256c781c849"},"source":["plot_density(gt_logits, gt_means, gt_lsigmas)\n","plot_density(model.logits, model.means, model.lsigmas)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}